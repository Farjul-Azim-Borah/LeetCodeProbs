Problem link : https://leetcode.com/problems/delete-nodes-from-linked-list-present-in-array/description/?envType=daily-question&envId=2024-09-06

class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        set<int> st;
        for(auto i : nums){
            st.insert(i);
        }
        ListNode* temp = head;
        ListNode* prev = NULL;

        while(temp != NULL){
            int a = temp->val;
            if(st.find(a) != st.end()){
                if(temp == head){
                    head = head->next;
                    delete temp;
                    temp = head;
                }else{
                    prev->next = temp->next;
                    delete temp;
                    temp = prev->next;
                }
            }else{
                prev = temp;
                temp = temp->next;
            }
        }
        return head;
    }
};



// --------------------------------------------------------------------------- Another approach ---------------------------------------------------------------------------------




class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        set<int> st;
        for(auto i : nums){
            st.insert(i);
        }
        ListNode* ans = new ListNode(-1);
        ListNode* res = ans;
        ListNode* temp = head;

        while(temp != NULL){
            int a = temp->val;
            if(st.find(a) == st.end()){
                res->next = temp;
                res = temp;
            }
            temp = temp->next;
        }
        res->next = NULL;
        return ans->next;
    }
};
