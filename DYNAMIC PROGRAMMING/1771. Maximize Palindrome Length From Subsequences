class Solution {
public:
    int longestPalindrome(string word1, string word2) {
        string newstr = word1 + word2;
        int m = word1.size();
        int n = newstr.size();

        vector<vector<int>> dp(n , vector<int>(n , 0));

        for(int i = n-1; i>=0; --i){
            dp[i][i] = 1;
            for(int j = i+1; j<n; ++j){
                if(newstr[i] == newstr[j]){
                    dp[i][j] = 2 + dp[i+1][j-1];
                }else{
                    dp[i][j] = max(dp[i+1][j] , dp[i][j-1]);
                }
            }
        }

        int ans = 0;
        for(int i = 0; i<m; ++i){
            for(int j = m; j<n; ++j){
                if(newstr[i] == newstr[j]){
                    ans = max(ans , dp[i][j]);
                }
            }
        }
        return ans;

        
    }
};
