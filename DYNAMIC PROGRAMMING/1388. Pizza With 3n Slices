Problem link : https://leetcode.com/problems/pizza-with-3n-slices/description/

class Solution {
public:
    vector<int> sli;
    int n;
    int dp[501][501];

    int rec(int level , int left){
        if(left == 0 || level >= n){
            return 0;
        }
        if(dp[level][left] != -1){
            return dp[level][left];
        }
        int ans = 0;
        ans = max(sli[level] + rec(level+2 , left-1), rec(level+1, left));
        return dp[level][left] = ans;
    }

    int maxSizeSlices(vector<int>& slices) {

        n = slices.size();
        sli = slices;
        memset(dp , -1 , sizeof(dp));
        int ans1 = rec(1, n/3);
        sli[n-1] = 0;
        memset(dp , -1 , sizeof(dp));
        int ans2 = rec(0, n/3);

        return max(ans1 , ans2);
    }
};
